{"version":3,"sources":["Redux/ActionTypes.js","Redux/Reducer.js","Redux/store.js","config/baseurl.js","Router.js","Redux/Action.js","App.js","reportWebVitals.js","index.js"],"names":["actionTypes","MAIN_NAV_START_FETCHING","MAIN_NAV_FETCHED","MAIN_NAV_FETCH_ERROR","BLOG_START_FETCHING","BLOG_FETCHED","BLOG_FETCH_ERROR","require","initalStateNav","nav_fetching","nav_fetched","nav_fetch_error","nav_data","nav_dataLength","initialStateBlog","blog_fetching","blog_fetched","blog_fetch_error","blog_data","blog_dataLength","reducer","combineReducers","reducerMainNav","state","action","type","fetching","data","length","error","reducerBlog","middleware","applyMiddleware","thunk","createLogger","store","createStore","baseurl","Router","dispatch","useDispatch","useEffect","headers","NavRemote","NAV","window","location","origin","BlogRemote","Blog","axios","get","then","res","catch","err","fetched","actionAll","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.225bdaff.chunk.js","sourcesContent":["export const actionTypes = {\n\n  MAIN_NAV_START_FETCHING: 'MAIN_NAV_START_FETCHING',\n  MAIN_NAV_FETCHED: 'MAIN_NAV_FETCHED',\n  MAIN_NAV_FETCH_ERROR: 'MAIN_NAV_FETCH_ERROR',\n\n  BLOG_START_FETCHING: 'BLOG_START_FETCHING',\n  BLOG_FETCHED: 'BLOG_FETCHED',\n  BLOG_FETCH_ERROR: 'BLOG_FETCH_ERROR',\n\n}","const { actionTypes } = require('./ActionTypes');\n\n\n/** NAVIGATION */\nconst initalStateNav = {  \n  nav_fetching: false,\n  nav_fetched: false,\n  nav_fetch_error: '',\n  nav_data: [],\n  nav_dataLength: 0,\n}\n\nexport const reducerMainNav = (state = initalStateNav, action) => {\n\n  switch (action.type) {\n\n    case actionTypes.MAIN_NAV_START_FETCHING:\n      return {\n        fetching: true,\n        nav_data: []\n      }\n    case actionTypes.MAIN_NAV_FETCHED:\n      return {\n        nav_data: action.data,\n        nav_fetched: true,\n        nav_dataLength: action.data.length\n      }\n    case actionTypes.MAIN_NAV_FETCH_ERROR:\n      return {\n        nav_fetched: false,\n        nav_fetching: false,\n        nav_fetch_error: action.error\n      }\n    \n    /** default state */\n    default:\n      return state;\n  }\n\n}// MAIN NAV CLOSED\n\n\n\n/** BLOG */\nconst initialStateBlog = {\n blog_fetching: false,\n blog_fetched: false,\n blog_fetch_error: '',\n blog_data: [],\n blog_dataLength: 0\n}\n\nexport const reducerBlog = (state = initialStateBlog, action) => {\n  \n  switch(action.type){\n\n    case actionTypes.BLOG_START_FETCHING:\n      return {\n        blog_fetching: true,\n        blog_data: []\n      }\n    case actionTypes.BLOG_FETCHED:\n      return {\n        blog_data: action.data,\n        blog_fetched: true,\n        blog_dataLength: action.data.length\n      }\n    case actionTypes.BLOG_FETCH_ERROR:\n      return {\n        blog_fetched: false,\n        blog_fetching: false,\n        blog_fetch_error: action.error\n      }\n      /** default state */\n      default:\n        return state;\n  }\n}\n\n\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport {\n  reducerMainNav, \n  reducerBlog\n  \n} from './Reducer';\n\nconst reducer = combineReducers(\n  {\n    // reducerFetchData,\n    reducerMainNav,\n    reducerBlog\n  }\n);\n\nconst middleware = applyMiddleware(thunk, createLogger());\n\nexport const store = createStore(reducer, middleware);\n","export const baseurl = {\n    URL: \"https://yellow-website.com/d9-blog\"\n}","import {useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {actionAll} from './Redux/Action';\n\nfunction Router() {\n\n  const dispatch = useDispatch();\n\n\n\n  useEffect(()=>{\n    dispatch(actionAll());\n  },[dispatch])\n\n\n  return (\n    <div>\n      <h1>Router...</h1>\n    </div>\n  )\n}\n\nexport default Router\n","import {actionTypes} from './ActionTypes';\nimport axios from \"axios\";\nimport { baseurl } from '../config/baseurl';\n\n\nexport const actionAll = () => {\n \n  const headers = {\n    headers: {\n    'Accept': 'application/vnd.api+json'\n    }\n  }\n\n  /**\n   * REMOTE SITE\n   * Install Module used\n   * https://www.drupal.org/project/rest_menu_items\n   * \n   * Enable : Rest UI : Menu Item to GET \n   * Set Permission : Access GET on Menu items per menu resource\n   * \n   * \n   */\n  \n  /**\n   * if npm run on localhost:3000\n   * fetch data from local json file.\n   */\n  /** MAIN NAVIGATION */\n  const NavLocal = './data/mainnav.json';\n  const NavRemote = `${baseurl.URL}/api/menu_items/main`;\n  const NAV = window.location.origin === 'http://localhost:3000' \n                    ? NavLocal\n                    : NavRemote;\n\n  /** MULTIPLE CHOICE QUIZ */\n  const BlogLocal = './data/blog.json';\n  const BlogRemote = `${baseurl.URL}/rest/blog`;\n  const Blog = window.location.origin === 'http://localhost:3000' \n                    ? BlogLocal\n                    : BlogRemote;\n\n\n  return function (dispatch) {\n\n    /** NAVIGATION */\n    dispatch({\n      type: actionTypes.MAIN_NAV_START_FETCHING\n    })\n    const reqNav = axios.get(NAV, headers)\n    reqNav.then((res) => {\n        //console.log(\"action\",res.data)\n        dispatch({\n          type: actionTypes.MAIN_NAV_FETCHED,\n          data: res.data\n        })\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.MAIN_NAV_FETCH_ERROR,\n          fetched: false,\n          error: err\n        })\n      })\n\n\n    /** BLOG */\n    dispatch({\n      type: actionTypes.BLOG_START_FETCHING\n    })\n    const reqBlog = axios.get(Blog, headers)\n    reqBlog.then((res) => {\n        //console.log(\"action\",res.data)\n        dispatch({\n          type: actionTypes.BLOG_FETCHED,\n          data: res.data\n        })\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.BLOG_FETCH_ERROR,\n          fetched: false,\n          error: err\n        })\n      })\n  }\n\n\n}//ActionAll closed","import {Provider} from 'react-redux';\nimport {store} from './Redux/store';\nimport Router from './Router';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router />\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}